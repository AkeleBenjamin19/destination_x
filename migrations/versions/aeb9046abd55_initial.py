"""Initial

Revision ID: aeb9046abd55
Revises: 
Create Date: 2025-05-12 02:26:34.435738

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'aeb9046abd55'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('amenities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('countries',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('demonym', sa.String(length=64), nullable=True),
    sa.Column('iso_code', sa.String(length=2), nullable=False),
    sa.Column('continent', sa.String(length=64), nullable=True),
    sa.Column('continent_code', sa.String(length=2), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iso_code'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('cities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_amenity_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amenity_id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['amenity_id'], ['amenities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'amenity_id')
    )
    op.create_table('user_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('budget', sa.Numeric(), nullable=True),
    sa.Column('climate_pref', sa.String(length=50), nullable=True),
    sa.Column('passport_country_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['passport_country_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('visa_policies',
    sa.Column('origin_id', sa.Integer(), nullable=False),
    sa.Column('destination_id', sa.Integer(), nullable=False),
    sa.Column('visa_free', sa.Boolean(), nullable=False),
    sa.Column('without_passport', sa.Boolean(), nullable=False),
    sa.Column('e_visa', sa.Boolean(), nullable=False),
    sa.Column('visa_on_arrival', sa.Boolean(), nullable=False),
    sa.Column('visa_required', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['destination_id'], ['countries.id'], ),
    sa.ForeignKeyConstraint(['origin_id'], ['countries.id'], ),
    sa.PrimaryKeyConstraint('origin_id', 'destination_id')
    )
    op.create_table('activities',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ident', sa.String(length=50), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('iata_code', sa.String(length=3), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('iso_country', sa.String(length=2), nullable=True),
    sa.Column('iso_region', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ident')
    )
    op.create_table('flight_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('origin_city_id', sa.Integer(), nullable=False),
    sa.Column('destination_city_id', sa.Integer(), nullable=False),
    sa.Column('departure_date', sa.Date(), nullable=False),
    sa.Column('return_date', sa.Date(), nullable=True),
    sa.Column('adults', sa.Integer(), nullable=False),
    sa.Column('max_price_filter', sa.Numeric(), nullable=True),
    sa.Column('currency_code', sa.String(length=3), nullable=True),
    sa.Column('best_price', sa.Numeric(), nullable=True),
    sa.Column('stops_allowed', sa.SmallInteger(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['destination_city_id'], ['cities.id'], ),
    sa.ForeignKeyConstraint(['origin_city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('hotels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('external_hotel_id', sa.String(length=255), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6), nullable=True),
    sa.Column('distance_to_airport', sa.Integer(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_hotel_id')
    )
    op.create_table('hotel_amenities',
    sa.Column('hotel_id', sa.Integer(), nullable=False),
    sa.Column('amenity_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['amenity_id'], ['amenities.id'], ),
    sa.ForeignKeyConstraint(['hotel_id'], ['hotels.id'], ),
    sa.PrimaryKeyConstraint('hotel_id', 'amenity_id')
    )
    op.create_table('user_activity_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_id', sa.Integer(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['activity_id'], ['activities.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'activity_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_activity_preferences')
    op.drop_table('hotel_amenities')
    op.drop_table('hotels')
    op.drop_table('flight_prices')
    op.drop_table('airports')
    op.drop_table('activities')
    op.drop_table('visa_policies')
    op.drop_table('user_preferences')
    op.drop_table('user_amenity_preferences')
    op.drop_table('cities')
    op.drop_table('users')
    op.drop_table('countries')
    op.drop_table('amenities')
    # ### end Alembic commands ###
